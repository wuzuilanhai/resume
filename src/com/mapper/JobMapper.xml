<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mapper.JobMapper">
	<resultMap id="BaseResultMap" type="com.pojo.Job">
		<id column="job_id" jdbcType="INTEGER" property="jobId" />
		<result column="job_name" jdbcType="VARCHAR" property="jobName" />
		<result column="worksite" jdbcType="VARCHAR" property="worksite" />
		<result column="job_subtime" jdbcType="DATE" property="jobSubtime" />
		<result column="industry_id" jdbcType="INTEGER" property="industryId" />
		<result column="job_salary" jdbcType="DOUBLE" property="jobSalary" />
		<result column="job_status" jdbcType="INTEGER" property="jobStatus" />
		<result column="job_description" jdbcType="VARCHAR" property="jobDescription" />
		<result column="job_email" jdbcType="VARCHAR" property="jobEmail" />
		<result column="company_id" jdbcType="INTEGER" property="companyId" />
		<result column="is_hot" jdbcType="INTEGER" property="isHot" />
		<result column="job_acquire" jdbcType="VARCHAR" property="jobAcquire" />
	</resultMap>
	<resultMap type="com.pojo.Job" id="jobResumeMap" extends="BaseResultMap">
		<collection property="resumes" ofType="com.pojo.Resume">
			<id column="resume_id" property="resumeId" jdbcType="INTEGER" />
			<result column="jobhunter_id" property="jobhunterId" jdbcType="INTEGER" />
			<result column="career_intention_id" property="careerIntentionId"
				jdbcType="INTEGER" />
			<result column="work_experience_ids" property="workExperienceIds"
				jdbcType="VARCHAR" />
			<result column="education_experience_ids" property="educationExperienceIds"
				jdbcType="VARCHAR" />
			<result column="project_experience_ids" property="projectExperienceIds"
				jdbcType="VARCHAR" />
			<result column="visibility" property="visibility" jdbcType="INTEGER" />
			<result column="visit_number" property="visitNumber" jdbcType="INTEGER" />
			<result column="last_edit_time" property="lastEditTime"
				jdbcType="DATE" />
		</collection>
	</resultMap>
	<resultMap type="com.pojo.JobCustom" id="hotJobLimitTenAndNewResultMap"
		extends="BaseResultMap">
		<result column="company_name" property="companyName" jdbcType="VARCHAR" />
		<result column="company_location" property="companyLocation"
			jdbcType="VARCHAR" />
		<result column="industry_name" property="industryName"
			jdbcType="VARCHAR" />
	</resultMap>
	<insert id="addJob" parameterType="com.pojo.Job">
		insert into job
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="jobId != null">
				job_id,
			</if>
			<if test="jobName != null">
				job_name,
			</if>
			<if test="worksite != null">
				worksite,
			</if>
			<if test="jobSubtime != null">
				job_subtime,
			</if>
			<if test="industryId != null">
				industry_id,
			</if>
			<if test="jobSalary != null">
				job_salary,
			</if>
			<if test="jobStatus != null">
				job_status,
			</if>
			<if test="jobDescription != null">
				job_description,
			</if>
			<if test="jobEmail != null">
				job_email,
			</if>
			<if test="companyId != null">
				company_id,
			</if>
			<if test="isHot != null">
				is_hot,
			</if>
			<if test="jobAcquire != null">
				job_acquire,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="jobId != null">
				#{jobId,jdbcType=INTEGER},
			</if>
			<if test="jobName != null">
				#{jobName,jdbcType=VARCHAR},
			</if>
			<if test="worksite != null">
				#{worksite,jdbcType=VARCHAR},
			</if>
			<if test="jobSubtime != null">
				#{jobSubtime,jdbcType=DATE},
			</if>
			<if test="industryId != null">
				#{industryId,jdbcType=INTEGER},
			</if>
			<if test="jobSalary != null">
				#{jobSalary,jdbcType=DOUBLE},
			</if>
			<if test="jobStatus != null">
				#{jobStatus,jdbcType=INTEGER},
			</if>
			<if test="jobDescription != null">
				#{jobDescription,jdbcType=VARCHAR},
			</if>
			<if test="jobEmail != null">
				#{jobEmail,jdbcType=VARCHAR},
			</if>
			<if test="companyId != null">
				#{companyId,jdbcType=INTEGER},
			</if>
			<if test="isHot != null">
				#{isHot,jdbcType=INTEGER},
			</if>
			<if test="jobAcquire != null">
				#{jobAcquire,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="findHotJobLimitTenAndNew" resultMap="hotJobLimitTenAndNewResultMap">
		select
		job.*,company.company_name,company.company_location,industry.industry_name
		from
		job,company,industry where
		job.company_id=company.company_id and
		job.is_hot=1 and job.industry_id=industry.industry_id order by
		job.job_subtime desc limit 10
	</select>
	<select id="findHotJobLimitFourAndNewByIndustryId"
		parameterType="int" resultMap="hotJobLimitTenAndNewResultMap">
		select
		job.*,company.company_name,company.company_location,industry.industry_name
		from
		job,company,industry where job.industry_id=#{industryId} and
		job.company_id=company.company_id and
		job.is_hot=1 and
		job.industry_id=industry.industry_id order by
		job.job_subtime desc
		limit 4
	</select>
	<select id="findAllJobs" resultType="int">
		select count(*) from job
	</select>
	<select id="findAllJobsByPage" parameterType="com.pojo.Page"
		resultMap="hotJobLimitTenAndNewResultMap">
		select
		job.*,company.company_name,company.company_location,industry.industry_name
		from
		job,company,industry where job.industry_id=industry.industry_id
		and
		job.company_id=company.company_id and
		job.is_hot=1 and
		job.industry_id=industry.industry_id
		limit #{pageNums},#{pageSize}
	</select>
	<sql id="query_job_where">
		<if test="job.jobName!=null">
			and job_name like "%${job.jobName}%"
		</if>
		<if test="job.industryId!=null">
			and job.industry_id=#{job.industryId}
		</if>
		<if test="location!=null">
			and company.company_location like "%${location}%"
		</if>
		<if test="queryTime!=null">
			and job.job_subtime>#{queryTime}
		</if>
		<if test="minSalary!=null">
			<![CDATA[and job.job_salary >= #{minSalary}]]>
		</if>
		<if test="maxSalary!=null">
			<![CDATA[and job.job_salary <=#{maxSalary}]]>
		</if>
	</sql>
	<select id="findAllJobsByCondition" parameterType="com.pojo.JobQueryVo"
		resultType="int">
		select count(*) from job,company
		<where>
			<include refid="query_job_where"></include>
		</where>
		and
		job.company_id=company.company_id
	</select>
	<select id="findJobsByCondition" parameterType="com.pojo.JobQueryVo"
		resultMap="hotJobLimitTenAndNewResultMap">
		select
		job.*,company.company_name,company.company_location,industry.industry_name
		from
		job,company,industry
		<where>
			<include refid="query_job_where"></include>
		</where>
		and job.industry_id=industry.industry_id
		and
		job.company_id=company.company_id
		<if test="page!=null">
			limit #{page.pageNums},#{page.pageSize}
		</if>
	</select>
	<select id="findJobDetailByJobId" parameterType="int"
		resultMap="hotJobLimitTenAndNewResultMap">
		select
		job.*,company.company_name,company.company_location,industry.industry_name
		from
		job,company,industry where job_id=#{jobId} and
		job.industry_id=industry.industry_id
		and
		job.company_id=company.company_id
	</select>
	<select id="findThreeJobByCompanyId" parameterType="int"
		resultMap="hotJobLimitTenAndNewResultMap">
		select
		job.*,company.company_name,company.company_location,industry.industry_name
		from
		job,company,industry where job.company_id=#{companyId} and
		job.company_id=company.company_id and
		job.industry_id=industry.industry_id order by
		job.job_subtime desc
		limit 3
	</select>
	<select id="findJobsByCommonNameLimitFour" parameterType="com.pojo.JobCustom"
		resultMap="hotJobLimitTenAndNewResultMap">
		select
		job.*,company.company_name,company.company_location,industry.industry_name
		from
		job,company,industry where job.job_name like "%${jobName}%" and
		job.job_id!=#{jobId}
		and
		job.company_id=company.company_id and
		job.industry_id=industry.industry_id order by
		job.job_subtime desc
		limit 4
	</select>
</mapper>